apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  serviceName: {{ template "fullname" . }}-transport
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
      labels:
        app: {{ template "fullname" . }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - sh
        - -c
        - plugin install lmenezes/elasticsearch-kopf ; plugin install cloud-aws ; elasticsearch -Des.insecure.allow.root=true -Des.discovery.zen.minimum_master_nodes=2 -Des.discovery.zen.ping.unicast.hosts={{ template "fullname" . }}-transport.default.svc.cluster.local:9300 -Des.path.data=/data-0,/data-1 -Des.path.logs=/data-0
        resources:
          requests:
            memory: {{ .Values.resources.limits.memory }}
        volumeMounts:
        - name: data-0
          mountPath: /data-0
        - name: data-1
          mountPath: /data-1
  volumeClaimTemplates:
  - metadata:
      name: data-0
      annotations:
        volume.alpha.kubernetes.io/storage-class: {{ .Values.persistence.storageClass | quote }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  - metadata:
      name: data-1
      annotations:
        volume.alpha.kubernetes.io/storage-class: {{ .Values.persistence.storageClass | quote }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
